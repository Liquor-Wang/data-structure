# include <cstdlib>
# include <iostream>
# include <cstring>

# define MAXSIZE 8
# define Status int
# define ElemType int
# define ERROR 0
# define OK 1

using namespace std; //该头文件没有定义全局命名空间，必须使用namespace std，指明在哪里的命名空间，这样才能使用类似于 cout 这样的C++标识符。

//顺序表的定义
typedef struct shun_xv_biao_shi_yan1
{
    ElemType elem[MAXSIZE];
    int length;
} SqList;

//初始化顺序表，构造一个空表
Status InitList(SqList &L)
{
    memset(L.elem,0,sizeof(L));  //这里的sizeof是固定写法
    L.length = 0;
    return 0;
}
//创建顺序表函数 初始化前n个数据
Status CreateList(SqList &L,int n)
{
    if(n<0 || n>MAXSIZE){
        return ERROR;
    }
    for (int i=0;i<n;i++){
        scanf("%d",&L.elem[i]);
        L.length++;
    }
    return OK;
}
//顺序表的插入
Status ListInsert(SqList &L,int i,ElemType e)
{
    int j=0;
    if((i<1)||(i>L.length+1))  //判断位置是否有效
    return ERROR;
    for (j=L.length-1;j>=i-1;j--){
        L.elem[j]=L.elem[j-1];
    }
    L.elem[i-1]=e;
    ++L.length;
    return OK;
}

//顺序表的删除
Status ListDelete(SqList &L,int i)
{
    int j;
    if ((i<1)||(i>L.length)) return ERROR;
    for(j=i;j<=L.length-1;j++){
        L.elem[j-1]=L.elem[j];
    }
    --L.length;
    return OK;
}

//打印函数
void Print(SqList L)
{
    for (int i=0;i<L.length;i++){
        printf("%d",L.elem[i]);
    }
    printf("\n");
}
//插入函数
void Insert(SqList &L,int i,int num)//参数1：插入位置；参数2：数据
{
    bool a;        //验证变量
    a = ListInsert(L,i,num); //调用插入函数
    if (a){
        printf("插入成功！\n");
        Print(L);
    }else{
        printf("位置无效或空间已满！");
    }
}
void Delete(SqList &L,int i)
{
    bool a;
    if (a){
        printf("删除%d成功！",i);
        Print(L);
    }else{
        printf("位置无效，删除%d失败！",i);
    }
}
//创建顺序表函数
bool Create(SqList &L)
{
    bool a;
    a = CreateList(L,6);
    if(a){
        return 1;
    }
}
int main()
{
    SqList L;
    int a;
    int num;
    printf("请以此输入：12，25，7，42，19，38\n");
    
    
    Delete(L,1);
    Delete(L,9);
    Delete(L,12);
    return 0;
}
